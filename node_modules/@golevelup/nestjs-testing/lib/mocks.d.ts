/// <reference types="jest" />
export declare type PartialFuncReturn<T> = {
    [K in keyof T]?: T[K] extends (...args: infer A) => infer U ? (...args: A) => PartialFuncReturn<U> : T[K];
};
export declare type DeepMocked<T> = {
    [K in keyof T]: T[K] extends (...args: any[]) => infer U ? jest.MockInstance<ReturnType<T[K]>, jest.ArgsType<T[K]>> & ((...args: jest.ArgsType<T[K]>) => DeepMocked<U>) : T[K];
} & T;
export declare const createMock: <T>(partial?: PartialFuncReturn<T>) => DeepMocked<T>;
//# sourceMappingURL=mocks.d.ts.map